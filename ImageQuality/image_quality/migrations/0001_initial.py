# Generated by Django 3.2.6 on 2023-11-13 13:52

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dissert',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=500)),
                ('image_link', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Dissert',
                'db_table': 'Dissert',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Pasta',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=1000)),
                ('image_link', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Pasta',
                'db_table': 'Pasta',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Personal_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='Personal_info', editable=False, max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('age', models.CharField(choices=[(None, ''), ('under_18', 'Under 18'), ('b18_24', '18-24'), ('b25_35', '25-35'), ('b35_45', '35-45'), ('b45_55', '45-55'), ('bover_55', 'Over 55')], default=None, max_length=120, verbose_name='age')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('education', models.CharField(choices=[(None, ''), ('Less_high_school', 'Less than high school'), ('High_school', 'High school or equivalent'), ('BA', 'Bachelor degree (e.g. BA, BSc)'), ('MSc', 'Master degree (e.g. MA, MSc)'), ('Doctorate', 'Doctorate (e.g. PhD)'), ('Not', 'Prefer not to say')], default=None, max_length=120, verbose_name='education')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('refuse_to_disc', 'Other / Prefer not to say')], default=None, max_length=300, verbose_name='gender')),
                ('session_id', models.CharField(default=None, max_length=100)),
            ],
            options={
                'verbose_name': 'personal_info',
                'db_table': 'personal_info',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='recipes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=1000)),
                ('image_link', models.CharField(max_length=1000)),
                ('attractiveness', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'recipes',
                'db_table': 'recipes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Salad',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=1000)),
                ('image_link', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'salad',
                'db_table': 'Salad',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Snacks',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=1000)),
                ('image_link', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Snacks',
                'db_table': 'Snacks',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SnacksRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.CharField(choices=[(None, ''), ('1', '1 Very Unattractive'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7 Very Attractive')], default=None, max_length=500, verbose_name='rating')),
                ('judging', models.CharField(default=None, max_length=500, verbose_name='judging')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.personal_info')),
                ('snacks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.snacks')),
            ],
            options={
                'verbose_name': 'Snacksrating',
                'db_table': 'Snacksrating',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SaladRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.CharField(choices=[(None, ''), ('1', '1 Very Unattractive'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7 Very Attractive')], default=None, max_length=500, verbose_name='rating')),
                ('judging', models.CharField(default=None, max_length=500, verbose_name='judging')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.personal_info')),
                ('salad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.salad')),
            ],
            options={
                'verbose_name': 'saladrating',
                'db_table': 'Saladrating',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PastaRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.CharField(choices=[(None, ''), ('1', '1 Very Unattractive'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7 Very Attractive')], default=None, max_length=500, verbose_name='rating')),
                ('judging', models.CharField(default=None, max_length=500, verbose_name='judging')),
                ('pasta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.pasta')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.personal_info')),
            ],
            options={
                'verbose_name': 'Pastarating',
                'db_table': 'Pastarating',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Ghs_fk',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='Cooking_knowledge', editable=False, max_length=50)),
                ('FK_9', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_1')),
                ('FK_10', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_2')),
                ('FK_11', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_3')),
                ('FK_12', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_4')),
                ('CS_9', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='CS_9')),
                ('CS_10', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='CS_10')),
                ('CS_11', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='CS_11')),
                ('CS_12', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='CS_12')),
                ('CS_13', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='CS_13')),
                ('CS_14', models.CharField(choices=[(None, ''), ('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='CS_14')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.personal_info')),
            ],
            options={
                'verbose_name': 'Ghs_fk',
                'db_table': 'ghs_fk',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DissertRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.CharField(choices=[(None, ''), ('1', '1 Very Unattractive'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7 Very Attractive')], default=None, max_length=500, verbose_name='rating')),
                ('judging', models.CharField(default=None, max_length=500, verbose_name='judging')),
                ('dissert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.dissert')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.personal_info')),
            ],
            options={
                'verbose_name': 'Dissertrating',
                'db_table': 'Dissertrating',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='recipesRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.CharField(choices=[(None, ''), ('1', '1 Very Unattractive'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7 Very Attractive')], default=None, max_length=500, verbose_name='rating')),
                ('judging', models.CharField(default=None, max_length=500, verbose_name='judging')),
                ('seen', models.CharField(blank=True, max_length=30)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.personal_info')),
                ('recipes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_quality.recipes')),
            ],
            options={
                'verbose_name': 'Ratings',
                'db_table': 'recipesRatings',
                'ordering': ['id'],
                'unique_together': {('person', 'recipes')},
            },
        ),
    ]
